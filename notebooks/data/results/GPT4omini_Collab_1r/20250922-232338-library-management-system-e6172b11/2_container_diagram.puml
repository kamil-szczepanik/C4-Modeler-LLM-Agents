@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
LAYOUT_WITH_LEGEND()

System_Boundary(lms, "Library Management System") {
    Person(librarian, "Librarian", "Responsible for managing library resources, assisting patrons, and overseeing circulation activities.")
    Person(patron, "Patron", "Users of the library who can search for items, borrow resources, and manage their accounts through the self-service portal.")
    Person(administrator, "Administrator", "Oversees the library management system, ensuring compliance, security, and system performance.")
    
    Container(webApp, "Web Application (Self-Service Portal)", "React (version 17.x)", "Responsive web application for users to search items, manage accounts, and handle transactions.")
    Container(apiGateway, "API Gateway", "Spring Cloud Gateway or NGINX", "Single entry point for client requests, handling authentication, rate limiting, and request aggregation.")
    Container(catalogService, "Catalog Service", "Spring Boot (version 2.5.x), PostgreSQL, Elasticsearch", "Manages cataloguing of physical and digital items, including CRUD operations and search functionalities.")
    Container(circulationService, "Circulation Management Service", "Spring Boot (version 2.5.x), PostgreSQL", "Handles borrowing and returning of items, tracking due dates, and managing fines.")
    Container(userManagementService, "User Management Service", "Spring Boot (version 2.5.x), PostgreSQL", "Manages user accounts, authentication, and authorization.")
    Container(paymentService, "Payment Processing Service", "Spring Boot (version 2.5.x)", "Integrates with external payment providers to handle transactions.")
    Container(cachingLayer, "Caching Layer", "Redis", "In-memory data store to cache frequently accessed data.")
    ContainerDb(database, "Database", "PostgreSQL (version 13.x)", "Relational database for storing user data, transaction history, and catalog information.")
    Container(searchIndex, "Search Index", "Elasticsearch", "Elasticsearch instance for indexing catalogued items.")
    System_Ext(stripePayPal, "Stripe/PayPal", "External payment processing systems for handling transactions related to fines and fees.")
    System_Ext(oauthProvider, "OAuth 2.0 Identity Provider", "External service for managing user authentication and sessions securely.")
}

Rel(librarian, webApp, "Uses", "HTTPS")
Rel(patron, webApp, "Accesses", "HTTPS")
Rel(administrator, webApp, "Monitors", "HTTPS")
Rel(webApp, apiGateway, "Sends requests to", "HTTPS")
Rel(apiGateway, catalogService, "Forwards requests to", "HTTP/REST")
Rel(apiGateway, circulationService, "Forwards requests to", "HTTP/REST")
Rel(apiGateway, userManagementService, "Forwards requests to", "HTTP/REST")
Rel(apiGateway, paymentService, "Forwards requests to", "HTTP/REST")
Rel(catalogService, database, "Reads from and writes to", "PostgreSQL protocol")
Rel(catalogService, searchIndex, "Indexes items in", "Elasticsearch REST API")
Rel(circulationService, database, "Reads from and writes to", "PostgreSQL protocol")
Rel(userManagementService, database, "Reads from and writes to", "PostgreSQL protocol")
Rel(paymentService, stripePayPal, "Processes payments through", "REST API")
Rel(webApp, oauthProvider, "Authenticates users via", "OAuth 2.0")