@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
LAYOUT_WITH_LEGEND()

System_Boundary(user_management_service, "User Management Service") {
    Component(api_controller, "API Controller", "Spring MVC Controller", "Handles incoming HTTP requests related to user management, validates input data, and returns appropriate HTTP responses.")
    Component(service_layer, "Service Layer", "Spring Service", "Implements business logic for user management, including user creation, authentication, and role management.")
    Component(repository_layer, "Repository Layer", "Spring Data JPA", "Handles data access and persistence for user-related entities, interacting with PostgreSQL.")
    Component(domain_model, "Domain Model", "Java Class", "Represents the user entity and its attributes, defining relationships with other entities if necessary.")
    Component(security_component, "Security Component", "Spring Security", "Manages user authentication and authorization using OAuth 2.0, handling token generation and validation.")
    Component(dtos, "DTOs (Data Transfer Objects)", "Java Class", "Defines data structures for transferring user data between layers.")
}

Rel(api_controller, service_layer, "Calls methods from the Service Layer to perform operations based on incoming requests.")
Rel(service_layer, repository_layer, "Interacts with the Repository Layer to persist and retrieve user data.")
Rel(service_layer, security_component, "Utilizes the Security Component for authentication and token management.")
Rel(service_layer, domain_model, "Operates on the Domain Model to perform business logic.")
Rel(api_controller, dtos, "Uses DTOs to handle input and output data.")
@enduml