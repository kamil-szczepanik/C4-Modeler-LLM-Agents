level: container
scope: "Container diagram for Library Management System"
system:
  name: "Library Management System"
elements:
  - type: "person"
    name: "Librarian"
    description: "Responsible for managing library resources, assisting patrons, and overseeing circulation activities."
  - type: "person"
    name: "Patron"
    description: "Users of the library who can search for items, borrow resources, and manage their accounts through the self-service portal."
  - type: "person"
    name: "Administrator"
    description: "Oversees the library management system, ensuring compliance, security, and system performance."
  - type: "externalSystem"
    name: "Stripe/PayPal"
    description: "External payment processing systems for handling transactions related to fines and fees."
  - type: "externalSystem"
    name: "OAuth 2.0 Identity Provider"
    description: "External service for managing user authentication and sessions securely."
  - type: "container"
    name: "Web Application (Self-Service Portal)"
    technology: "React (version 17.x)"
    description: "Responsive web application for users to search items, manage accounts, and handle transactions."
  - type: "container"
    name: "API Gateway"
    technology: "Spring Cloud Gateway or NGINX"
    description: "Single entry point for client requests, handling authentication, rate limiting, and request aggregation."
  - type: "container"
    name: "Catalog Service"
    technology: "Spring Boot (version 2.5.x), PostgreSQL, Elasticsearch"
    description: "Manages cataloguing of physical and digital items, including CRUD operations and search functionalities."
  - type: "container"
    name: "Circulation Management Service"
    technology: "Spring Boot (version 2.5.x), PostgreSQL"
    description: "Handles borrowing and returning of items, tracking due dates, and managing fines."
  - type: "container"
    name: "User Management Service"
    technology: "Spring Boot (version 2.5.x), PostgreSQL"
    description: "Manages user accounts, authentication, and authorization."
  - type: "container"
    name: "Payment Processing Service"
    technology: "Spring Boot (version 2.5.x)"
    description: "Integrates with external payment providers to handle transactions."
  - type: "container"
    name: "Caching Layer"
    technology: "Redis"
    description: "In-memory data store to cache frequently accessed data."
  - type: "container"
    name: "Database"
    technology: "PostgreSQL (version 13.x)"
    description: "Relational database for storing user data, transaction history, and catalog information."
  - type: "container"
    name: "Search Index"
    technology: "Elasticsearch"
    description: "Elasticsearch instance for indexing catalogued items."
relationships:
  - source: "Librarian"
    destination: "Web Application (Self-Service Portal)"
    description: "Uses"
    technology: "HTTPS"
  - source: "Patron"
    destination: "Web Application (Self-Service Portal)"
    description: "Accesses"
    technology: "HTTPS"
  - source: "Administrator"
    destination: "Web Application (Self-Service Portal)"
    description: "Monitors"
    technology: "HTTPS"
  - source: "Web Application (Self-Service Portal)"
    destination: "API Gateway"
    description: "Sends requests to"
    technology: "HTTPS"
  - source: "API Gateway"
    destination: "Catalog Service"
    description: "Forwards requests to"
    technology: "HTTP/REST"
  - source: "API Gateway"
    destination: "Circulation Management Service"
    description: "Forwards requests to"
    technology: "HTTP/REST"
  - source: "API Gateway"
    destination: "User Management Service"
    description: "Forwards requests to"
    technology: "HTTP/REST"
  - source: "API Gateway"
    destination: "Payment Processing Service"
    description: "Forwards requests to"
    technology: "HTTP/REST"
  - source: "Catalog Service"
    destination: "Database"
    description: "Reads from and writes to"
    technology: "PostgreSQL protocol"
  - source: "Catalog Service"
    destination: "Search Index"
    description: "Indexes items in"
    technology: "Elasticsearch REST API"
  - source: "Circulation Management Service"
    destination: "Database"
    description: "Reads from and writes to"
    technology: "PostgreSQL protocol"
  - source: "User Management Service"
    destination: "Database"
    description: "Reads from and writes to"
    technology: "PostgreSQL protocol"
  - source: "Payment Processing Service"
    destination: "Stripe/PayPal"
    description: "Processes payments through"
    technology: "REST API"
  - source: "Web Application (Self-Service Portal)"
    destination: "OAuth 2.0 Identity Provider"
    description: "Authenticates users via"
    technology: "OAuth 2.0"