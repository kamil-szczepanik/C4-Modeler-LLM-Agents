@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
LAYOUT_WITH_LEGEND()

System_Boundary(clinic_management_system, "Clinic Management System") {
    Container(ui_container, "User Interface (UI) Container", "React, Redux, Axios", "Patient registration, appointment scheduling, EMR display, billing.")
    Container(patient_management_service, "Patient Management Microservice", "Spring Boot, PostgreSQL", "Manage patient demographics and registration.")
    Container(appointment_management_service, "Appointment Management Microservice", "Spring Boot, PostgreSQL", "Schedule appointments and check for resource conflicts.")
    Container(emr_service, "Electronic Medical Records (EMR) Microservice", "Spring Boot, MongoDB", "Store and retrieve EMR data, maintain audit trails.")
    Container(billing_service, "Billing Microservice", "Spring Boot, PostgreSQL", "Manage billing information and insurance claims.")
    Container(api_gateway, "API Gateway", "Kong or AWS API Gateway", "Manage and secure access to microservices.")
    Container(auth_service, "Authentication Service", "Spring Boot, JWT", "Implement multi-factor authentication, enforce RBAC.")
    Container(logging_service, "Centralized Logging and Monitoring", "ELK Stack, Prometheus, Grafana", "Collect and analyze logs, monitor performance metrics.")
    Container(data_retention_service, "Data Retention and Archiving Service", "Custom service using Spring Boot", "Implement data retention policies, archive older data.")
}

Person(healthcare_provider, "Healthcare Provider", "Users who access the system to manage patient care, appointments, and medical records.")
Person(administrative_staff, "Administrative Staff", "Users responsible for managing appointments, billing, and patient records.")
System_Ext(external_lab_system, "External Lab System", "An external system that provides lab results and data for integration with the Clinic Management System.")
System_Ext(imaging_system, "Imaging System", "An external system that provides imaging data for integration with the Clinic Management System.")

Rel(healthcare_provider, ui_container, "Uses", "HTTPS")
Rel(administrative_staff, ui_container, "Uses", "HTTPS")
Rel(ui_container, api_gateway, "Communicates with", "HTTPS")
Rel(api_gateway, patient_management_service, "Routes requests to", "HTTPS")
Rel(api_gateway, appointment_management_service, "Routes requests to", "HTTPS")
Rel(api_gateway, emr_service, "Routes requests to", "HTTPS")
Rel(api_gateway, billing_service, "Routes requests to", "HTTPS")
Rel(auth_service, api_gateway, "Delegates authentication to", "HTTPS")
Rel(logging_service, patient_management_service, "Receives logs from", "HTTPS")
Rel(logging_service, appointment_management_service, "Receives logs from", "HTTPS")
Rel(logging_service, emr_service, "Receives logs from", "HTTPS")
Rel(logging_service, billing_service, "Receives logs from", "HTTPS")
Rel(data_retention_service, patient_management_service, "Interacts with", "Database")
Rel(data_retention_service, appointment_management_service, "Interacts with", "Database")
Rel(data_retention_service, emr_service, "Interacts with", "Database")
Rel(data_retention_service, billing_service, "Interacts with", "Database")