@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
LAYOUT_WITH_LEGEND()

Person(cashier, "Cashier", "The user responsible for processing sales transactions, managing payments, and applying promotions during the checkout process.")

System_Ext(stripe, "Stripe Terminal", "An external payment processing system that handles secure transactions and ensures compliance with PCI-DSS standards.")
System_Ext(emailServiceProvider, "Email Service Provider", "An external service (e.g., SendGrid) used for sending email receipts to customers after transactions.")

System_Boundary(nextGenPOS, "NextGen Point-of-Sale") {
    Container(frontendApp, "Frontend Web Application", "React.js", "A responsive web application built with React.js that handles user interactions and communicates with the backend API.")
    Container(apiGateway, "API Gateway", "Node.js, Express", "Node.js and Express-based API that handles authentication and routes requests to microservices.")
    Container(transactionService, "Transaction Management Service", "Node.js, Express", "Microservice for managing transactions, processing item scans, and applying promotions.")
    Container(paymentService, "Payment Processing Service", "Node.js, Express", "Microservice for payment processing via Stripe, integrating with Stripe's SDK.")
    Container(receiptService, "Receipt Generation Service", "Node.js, Express", "Microservice for generating and sending receipts, integrating with email service.")
    Container(database, "Database", "PostgreSQL, Redis", "PostgreSQL database with Redis for caching, storing transaction data and promotions.")
    Container(localStorage, "Local Storage Service", "SQLite", "SQLite database for offline transaction buffering, storing transactions locally during outages.")
    Container(monitoringService, "Monitoring and Logging Service", "AWS CloudWatch", "Service for collecting logs and metrics, monitoring performance, and logging transactions.")
}

Rel(cashier, frontendApp, "Uses", "HTTPS")
Rel(frontendApp, apiGateway, "Communicates with", "HTTPS")
Rel(apiGateway, transactionService, "Routes requests to", "RESTful API over HTTPS")
Rel(apiGateway, paymentService, "Routes requests to", "RESTful API over HTTPS")
Rel(transactionService, database, "Stores transaction data in", "SQL")
Rel(paymentService, stripe, "Integrates with", "HTTPS")
Rel(receiptService, emailServiceProvider, "Sends email requests for receipt delivery to", "HTTPS")
Rel(monitoringService, frontendApp, "Monitors and logs", "AWS SDK")
Rel(monitoringService, apiGateway, "Monitors and logs", "AWS SDK")
Rel(monitoringService, transactionService, "Monitors and logs", "AWS SDK")
Rel(monitoringService, paymentService, "Monitors and logs", "AWS SDK")
Rel(monitoringService, receiptService, "Monitors and logs", "AWS SDK")
Rel(monitoringService, database, "Monitors and logs", "AWS SDK")
Rel(monitoringService, localStorage, "Monitors and logs", "AWS SDK")