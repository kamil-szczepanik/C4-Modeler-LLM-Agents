@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
LAYOUT_WITH_LEGEND()

System_Boundary(PatientManagementService, "Patient Management Service") {
    Component(API_Controller, "API Controller", "Node.js with Express", "Handles incoming HTTP requests, validates input data, and routes requests to appropriate service methods.")
    Component(Service_Layer, "Service Layer", "Node.js with Express", "Implements business logic for patient management functionalities and coordinates between the API Controller and the Repository layer.")
    Component(PatientService, "PatientService", "Node.js with Express", "Manages patient registration and demographic data.")
    Component(AppointmentService, "AppointmentService", "Node.js with Express", "Handles appointment scheduling and resource clash checks.")
    Component(EMRService, "EMRService", "Node.js with Express", "Manages electronic medical records and audit trails.")
    Component(BillingService, "BillingService", "Node.js with Express", "Oversees billing processes and insurance claim submissions.")
    Component(Repository_Layer, "Repository Layer", "Node.js with Express", "Interacts with the database to perform CRUD operations and abstracts data access logic from the service layer.")
    Component(PatientRepository, "PatientRepository", "Node.js with Express", "Data access for patient records.")
    Component(AppointmentRepository, "AppointmentRepository", "Node.js with Express", "Data access for appointment records.")
    Component(EMRRepository, "EMRRepository", "Node.js with Express", "Data access for electronic medical records.")
    Component(BillingRepository, "BillingRepository", "Node.js with Express", "Data access for billing and claims data.")
    Component(Domain_Model, "Domain Model", "Node.js with Express", "Defines the core entities and their relationships.")
    Component(Security_Module, "Security Module", "Node.js with Express", "Implements security measures such as multi-factor authentication and data encryption.")
    Component(AuthService, "AuthService", "Node.js with Express", "Manages user authentication and authorization.")
    Component(EncryptionService, "EncryptionService", "Node.js with Express", "Handles data encryption and decryption processes.")
}

Rel(API_Controller, Service_Layer, "Routes requests to")
Rel(Service_Layer, PatientService, "Invokes")
Rel(Service_Layer, AppointmentService, "Invokes")
Rel(Service_Layer, EMRService, "Invokes")
Rel(Service_Layer, BillingService, "Invokes")
Rel(PatientService, Repository_Layer, "Communicates with")
Rel(AppointmentService, Repository_Layer, "Communicates with")
Rel(EMRService, Repository_Layer, "Communicates with")
Rel(BillingService, Repository_Layer, "Communicates with")
Rel(Repository_Layer, PatientRepository, "Uses for data access")
Rel(Repository_Layer, AppointmentRepository, "Uses for data access")
Rel(Repository_Layer, EMRRepository, "Uses for data access")
Rel(Repository_Layer, BillingRepository, "Uses for data access")
Rel(Security_Module, AuthService, "Utilizes for authentication")
Rel(Security_Module, EncryptionService, "Utilizes for data protection")
@enduml