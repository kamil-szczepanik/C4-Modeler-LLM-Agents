@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
LAYOUT_WITH_LEGEND()

System_Boundary(web_app, "Web Application") {
    Component(api_controller, "API Controller", "Node.js with Express or Spring Boot", "Handles incoming HTTP requests, routes requests to services, validates input data, and returns responses.")
    Component(service_layer, "Service Layer", "Node.js with Express or Spring Boot", "Implements business logic for each functional requirement.")
    Component(patient_service, "PatientService", "Node.js with Express or Spring Boot", "Manages patient registration, demographic data, and related functionalities.")
    Component(appointment_service, "AppointmentService", "Node.js with Express or Spring Boot", "Handles appointment scheduling, resource clash checks, and notifications.")
    Component(emr_service, "EMRService", ".NET Core or Java Spring Boot with NoSQL", "Manages electronic medical records, including data storage, retrieval, and audit trails.")
    Component(billing_service, "BillingService", "Python with Flask or Java Spring Boot", "Manages billing processes, insurance claim submissions, and tracking.")
    Component(repository_layer, "Repository Layer", "Node.js with Express or Spring Boot", "Interacts with the database for CRUD operations.")
    Component(patient_repository, "PatientRepository", "Node.js with Express or Spring Boot", "Handles CRUD operations for patient data.")
    Component(appointment_repository, "AppointmentRepository", "Node.js with Express or Spring Boot", "Handles CRUD operations for appointment data.")
    Component(emr_repository, "EMRRepository", "Node.js with Express or Spring Boot", "Handles CRUD operations for EMR data.")
    Component(billing_repository, "BillingRepository", "Node.js with Express or Spring Boot", "Handles CRUD operations for billing data.")
    Component(security_module, "Security Module", "Node.js with Express or Spring Boot", "Implements multi-factor authentication and authorization, ensuring data encryption (AES-256) at rest.")
    Component(interoperability_module, "Interoperability Module", "Node.js with Express or Spring Boot", "Manages HL7 FHIR API interactions for lab and imaging systems.")
}

Rel(api_controller, service_layer, "Routes requests to")
Rel(service_layer, patient_service, "Invokes")
Rel(service_layer, appointment_service, "Invokes")
Rel(service_layer, emr_service, "Invokes")
Rel(service_layer, billing_service, "Invokes")
Rel(patient_service, patient_repository, "Uses for data access")
Rel(appointment_service, appointment_repository, "Uses for data access")
Rel(emr_service, emr_repository, "Uses for data access")
Rel(billing_service, billing_repository, "Uses for data access")
Rel(api_controller, security_module, "Calls for authentication and authorization")
Rel(api_controller, interoperability_module, "Calls for HL7 FHIR API interactions")
@enduml